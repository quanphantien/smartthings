"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DriversEndpoint = void 0;
const endpoint_1 = require("../endpoint");
const endpoint_client_1 = require("../endpoint-client");
class DriversEndpoint extends endpoint_1.Endpoint {
    constructor(config) {
        super(new endpoint_client_1.EndpointClient('drivers', config));
    }
    async get(id) {
        return this.client.get(id);
    }
    async getRevision(id, version) {
        return this.client.get(`${id}/versions/${version}`);
    }
    async delete(id) {
        await this.client.delete(id);
    }
    async list() {
        return this.client.getPagedItems('');
    }
    /**
     * List drivers in the default channel. (The default channel in this context is a channel
     * that users do not need to subscribe to.)
     */
    async listDefault() {
        return this.client.getPagedItems('default');
    }
    /**
     * Uploads the zipped package represented by archiveData.
     */
    async upload(archiveData) {
        return this.client.request('post', 'package', archiveData, undefined, { headerOverrides: { 'Content-Type': 'application/zip' } });
    }
}
exports.DriversEndpoint = DriversEndpoint;
